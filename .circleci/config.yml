version: 2
cache_keys:
  gradle_cache:
    primary: &primary_key_of_gradle_cache gradle-cache-{{ checksum "build.gradle" }}}-{{ checksum "app/build.gradle" }}
    keys: &all_keys_of_gradle_cache
    - *primary_key_of_gradle_cache

shared_build_steps:
- run: &init_bash
    name: Source the bash source
    command: |
      echo "export REPOSITORY_ROOT=$(git rev-parse --show-toplevel)" >> $BASH_ENV
      source $BASH_ENV

notificate_failed:
- run: &notify_failed
    name: Post to Slack on fail
    command: |
      curl -X POST --data-urlencode "payload={\"channel\": \"#ci_notification\", \"username\": \"webhookbot\", \"text\": \"@here CIに失敗しました。\", \"icon_emoji\": \":ghost:\"}" $SLACK_WEB_HOOK
    when: on_fail

defaults: &defaults
  working_directory: ~/sample_code_programs
  docker:
  - image: circleci/android:api-28-alpha
  environment:
    JVM_OPTS: -Xmx3200m
    TZ: Asia/Tokyo

jobs:
  fetch:
    <<: *defaults
    steps:
    - checkout
    - run: *init_bash
    - restore_cache: &restore_gradle_cache
        keys: *all_keys_of_gradle_cache
    - run:
        name: update android sdk
        command: |
          echo y | android update sdk --no-ui --all --filter tool,extra-android-m2repository,extra-google-google_play_services,extra-google-m2repository,android-28
          echo y | android update sdk --no-ui --all --filter build-tools-28.0.0
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
    - save_cache:
        paths:
        - ~/.android
        - ~/.gradle
        - .gradle
        key: *primary_key_of_gradle_cache
    - persist_to_workspace:
        root: .
        paths:
        - .
    - run: *notify_failed

  test:
    <<: *defaults
    steps:
    - attach_workspace: &attach_workspace_sample_code_programs
        at: .
    - run: *init_bash
    - restore_cache: *restore_gradle_cache
    - run:
        name: Run Tests
        command: |
          ./gradlew test
          ./gradlew lint test
    - run: &store_test_result_files
        name: Store Test Results
        command: |
          mkdir -p ~/cayenne_android/junit/
          find . -type f -regex ".*/test-results/*/.*xml" -exec cp {} ~/sample_code_programs/junit/ \;
        when: always
    - store_test_results:
        path: ~/sample_code_programs/junit
    - store_artifacts:
        path: ~/sample_code_programs/app/build/reports/tests
    - run: *notify_failed

  build_debug:
    <<: *defaults
    steps:
      - attach_workspace: *attach_workspace_sample_code_programs
      - run: *init_bash
      - restore_cache: *restore_gradle_cache
      - run:
          name: assembleDebug
          command: ./gradlew assembleDebug
      - run: *notify_failed

workflows:
  version: 2
  run_ci:
    jobs:
      - fetch
      - test:
          requires:
          - fetch
      - build_debug:
          requires:
          - fetch


